<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:d3="http://research.microsoft.com/DynamicDataDisplay/1.0"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        x:Class="PDS800_WirelessTransmitter_Calibration.CalibrationBase"
        mc:Ignorable="d"
        Title="PDS无线变送器标定软件"
        MinHeight="600 "
        MinWidth="800"
        Height="600 "
        Width="800"
        Background="White">
    <Window.Resources>
        <ResourceDictionary>
            <LinearGradientBrush x:Key="TabItem.Static.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#F0F0F0"
                              Offset="0.0" />
                <GradientStop Color="#E5E5E5"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.Static.Border"
                             Color="#ACACAC" />
            <LinearGradientBrush x:Key="TabItem.MouseOver.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#ECF4FC"
                              Offset="0.0" />
                <GradientStop Color="#DCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.MouseOver.Border"
                             Color="#7EB4EA" />
            <SolidColorBrush x:Key="TabItem.Disabled.Background"
                             Color="#F0F0F0" />
            <SolidColorBrush x:Key="TabItem.Disabled.Border"
                             Color="#D9D9D9" />
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin"
                        Value="5" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="MinWidth"
                        Value="30" />
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Margin"
                        Value="5" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="MinWidth"
                        Value="30" />
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Margin"
                        Value="5" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="SelectedIndex"
                        Value="0" />
                <Setter Property="MinWidth"
                        Value="40" />
                <Setter Property="Background"
                        Value="Snow" />
                <Setter Property="Template"
                        Value="{DynamicResource ComboBoxCalibration}" />
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Margin"
                        Value="5" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="MinWidth"
                        Value="30" />
            </Style>
            <Style TargetType="{x:Type Ellipse}">
                <Setter Property="Width"
                        Value="20" />
                <Setter Property="Height"
                        Value="20" />
                <Setter Property="Fill"
                        Value="Gray" />
                <Setter Property="Stroke"
                        Value="White" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
            </Style>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Margin"
                        Value="5" />
                <Setter Property="BorderBrush"
                        Value="Gray" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Style>
            <Style TargetType="{x:Type DockPanel}">
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
            </Style>
            <Style TargetType="{x:Type StatusBar}">
                <Setter Property="Margin"
                        Value="5,0" />
                <Setter Property="Background"
                        Value="MintCream" />
            </Style>
            <Style TargetType="{x:Type StatusBarItem}">
                <Setter Property="VerticalAlignment"
                        Value="Bottom" />
            </Style>
            <SolidColorBrush x:Key="TabItem.Selected.Background"
                             Color="#FFFFFF" />
            <SolidColorBrush x:Key="TabItem.Selected.Border"
                             Color="Gray" />
            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Margin"
                        Value="5" />
                <Setter Property="BorderBrush"
                        Value="Gray" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Background"
                        Value="{StaticResource TabItem.Selected.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource TabItem.Selected.Border}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot"
                                  ClipToBounds="true"
                                  SnapsToDevicePixels="true"
                                  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1"
                                                      Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0"
                                                   Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1"
                                                   Height="*" />
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="headerPanel"
                                          Background="Transparent"
                                          Grid.Column="0"
                                          IsItemsHost="true"
                                          Margin="2,2,2,0"
                                          Grid.Row="0"
                                          KeyboardNavigation.TabIndex="1"
                                          Panel.ZIndex="1" />
                                <Border x:Name="contentPanel"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Grid.Column="0"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        Grid.Row="1"
                                        CornerRadius="0,4,4,4"
                                        KeyboardNavigation.TabIndex="2"
                                        KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      ContentSource="SelectedContent"
                                                      Margin="{TemplateBinding Padding}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement"
                                         Value="Bottom">
                                    <Setter Property="Grid.Row"
                                            TargetName="headerPanel"
                                            Value="1" />
                                    <Setter Property="Grid.Row"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition0"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition1"
                                            Value="Auto" />
                                    <Setter Property="Margin"
                                            TargetName="headerPanel"
                                            Value="2,0,2,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                         Value="Left">
                                    <Setter Property="Grid.Row"
                                            TargetName="headerPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Row"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Column"
                                            TargetName="headerPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Column"
                                            TargetName="contentPanel"
                                            Value="1" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition0"
                                            Value="Auto" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition1"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition0"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition1"
                                            Value="0" />
                                    <Setter Property="Margin"
                                            TargetName="headerPanel"
                                            Value="2,2,0,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement"
                                         Value="Right">
                                    <Setter Property="Grid.Row"
                                            TargetName="headerPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Row"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Grid.Column"
                                            TargetName="headerPanel"
                                            Value="1" />
                                    <Setter Property="Grid.Column"
                                            TargetName="contentPanel"
                                            Value="0" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition0"
                                            Value="*" />
                                    <Setter Property="Width"
                                            TargetName="ColumnDefinition1"
                                            Value="Auto" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition0"
                                            Value="*" />
                                    <Setter Property="Height"
                                            TargetName="RowDefinition1"
                                            Value="0" />
                                    <Setter Property="Margin"
                                            TargetName="headerPanel"
                                            Value="0,2,2,2" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="TextElement.Foreground"
                                            TargetName="templateRoot"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       SnapsToDevicePixels="true"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       StrokeThickness="1"
                                       StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="Background"
                        Value="{StaticResource TabItem.Static.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource TabItem.Static.Border}" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Padding"
                        Value="6,2,6,2" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot"
                                  SnapsToDevicePixels="true">
                                <Border x:Name="mainBorder"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,1,1,0"
                                        CornerRadius="4,4,0,0"
                                        Background="{TemplateBinding Background}"
                                        Margin="0">
                                    <Border x:Name="innerBorder"
                                            BorderBrush="{StaticResource TabItem.Selected.Border}"
                                            BorderThickness="1,1,1,0"
                                            CornerRadius="4,4,0,0"
                                            Background="{StaticResource TabItem.Selected.Background}"
                                            Margin="-1"
                                            Opacity="0" />
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  ContentSource="Header"
                                                  Focusable="False"
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Left" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,0,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,0,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Bottom" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,0,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,0,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Right" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0,1,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0,1,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.MouseOver.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,1,0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,1,0" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Left" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="contentPresenter"
                                            Value="0.56" />
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,0,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,0,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Bottom" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="contentPresenter"
                                            Value="0.56" />
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,0,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,0,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Right" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="contentPresenter"
                                            Value="0.56" />
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0,1,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0,1,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity"
                                            TargetName="contentPresenter"
                                            Value="0.56" />
                                    <Setter Property="Background"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="mainBorder"
                                            Value="{StaticResource TabItem.Disabled.Border}" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,1,0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,1,0" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Left" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,0,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,0,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Left" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter Property="Margin"
                                            Value="-2,-2,0,-2" />
                                    <Setter Property="Opacity"
                                            TargetName="innerBorder"
                                            Value="1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,0,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,0,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Bottom" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,0,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,0,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Bottom" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter Property="Margin"
                                            Value="-2,0,-2,-2" />
                                    <Setter Property="Opacity"
                                            TargetName="innerBorder"
                                            Value="1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,0,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,0,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Right" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0,1,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0,1,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Right" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter Property="Margin"
                                            Value="0,-2,-2,-2" />
                                    <Setter Property="Opacity"
                                            TargetName="innerBorder"
                                            Value="1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="0,1,1,1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="0,1,1,1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,1,0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,1,0" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                                   Value="Top" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex"
                                            Value="1" />
                                    <Setter Property="Margin"
                                            Value="-2,-2,-2,0" />
                                    <Setter Property="Opacity"
                                            TargetName="innerBorder"
                                            Value="1" />
                                    <Setter Property="BorderThickness"
                                            TargetName="innerBorder"
                                            Value="1,1,1,0" />
                                    <Setter Property="BorderThickness"
                                            TargetName="mainBorder"
                                            Value="1,1,1,0" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxCalibration"
                             TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot"
                      SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                          Width="0" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="True"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                           Margin="1"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                           Placement="Bottom">
                        <Themes:SystemDropShadowChrome x:Name="shadow"
                                                       Color="Transparent"
                                                       MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                       MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                            <Border x:Name="DropDownBorder"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1"
                                    CornerRadius="5"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                <ScrollViewer x:Name="DropDownScrollViewer"
                                              Margin="5">
                                    <Grid x:Name="grid"
                                          RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas"
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="OpaqueRect"
                                                       Fill="{Binding Background, ElementName=DropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Themes:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Background="Lavender"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="OverridesDefaultStyle"
                                        Value="True" />
                                <Setter Property="IsTabStop"
                                        Value="False" />
                                <Setter Property="Focusable"
                                        Value="False" />
                                <Setter Property="ClickMode"
                                        Value="Press" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border x:Name="templateRoot"
                                                    BorderBrush="#FFACACAC"
                                                    CornerRadius="5"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    SnapsToDevicePixels="True"
                                                    Background="Lavender">
                                                <Border x:Name="splitBorder"
                                                        BorderBrush="Transparent"
                                                        BorderThickness="1"
                                                        HorizontalAlignment="Right"
                                                        Margin="0"
                                                        SnapsToDevicePixels="True"
                                                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                    <Path x:Name="Arrow"
                                                          Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                          Fill="#FF606060"
                                                          HorizontalAlignment="Center"
                                                          Margin="0"
                                                          VerticalAlignment="Center" />
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                   Value="true" />
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                   Value="false" />
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                                   Value="false" />
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                                   Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="templateRoot"
                                                            Value="White" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="templateRoot"
                                                            Value="#FFABADB3" />
                                                    <Setter Property="Background"
                                                            TargetName="splitBorder"
                                                            Value="Transparent" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="splitBorder"
                                                            Value="Transparent" />
                                                </MultiDataTrigger>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Fill"
                                                            TargetName="Arrow"
                                                            Value="Black" />
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                   Value="true" />
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                   Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="templateRoot">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0,1"
                                                                                 StartPoint="0,0">
                                                                <GradientStop Color="#FFECF4FC"
                                                                              Offset="0" />
                                                                <GradientStop Color="#FFDCECFC"
                                                                              Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderBrush"
                                                            TargetName="templateRoot"
                                                            Value="#FF7EB4EA" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                   Value="true" />
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                   Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="templateRoot"
                                                            Value="White" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="templateRoot"
                                                            Value="#FF7EB4EA" />
                                                    <Setter Property="Background"
                                                            TargetName="splitBorder">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0,1"
                                                                                 StartPoint="0,0">
                                                                <GradientStop Color="#FFEBF4FC"
                                                                              Offset="0" />
                                                                <GradientStop Color="#FFDCECFC"
                                                                              Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderBrush"
                                                            TargetName="splitBorder"
                                                            Value="#FF7EB4EA" />
                                                </MultiDataTrigger>
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <Setter Property="Fill"
                                                            TargetName="Arrow"
                                                            Value="Black" />
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                                   Value="true" />
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                   Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="templateRoot">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0,1"
                                                                                 StartPoint="0,0">
                                                                <GradientStop Color="#FFDAECFC"
                                                                              Offset="0" />
                                                                <GradientStop Color="#FFC4E0FC"
                                                                              Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderBrush"
                                                            TargetName="templateRoot"
                                                            Value="#FF569DE5" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                                                   Value="true" />
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                   Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="templateRoot"
                                                            Value="White" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="templateRoot"
                                                            Value="#FF569DE5" />
                                                    <Setter Property="Background"
                                                            TargetName="splitBorder">
                                                        <Setter.Value>
                                                            <LinearGradientBrush EndPoint="0,1"
                                                                                 StartPoint="0,0">
                                                                <GradientStop Color="#FFDAEBFC"
                                                                              Offset="0" />
                                                                <GradientStop Color="#FFC4E0FC"
                                                                              Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="BorderBrush"
                                                            TargetName="splitBorder"
                                                            Value="#FF569DE5" />
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled"
                                                         Value="False">
                                                    <Setter Property="Fill"
                                                            TargetName="Arrow"
                                                            Value="#FFBFBFBF" />
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                                   Value="false" />
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                   Value="false" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="templateRoot"
                                                            Value="#FFF0F0F0" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="templateRoot"
                                                            Value="#FFD9D9D9" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                                   Value="false" />
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}"
                                                                   Value="true" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background"
                                                            TargetName="templateRoot"
                                                            Value="White" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="templateRoot"
                                                            Value="#FFBFBFBF" />
                                                    <Setter Property="Background"
                                                            TargetName="splitBorder"
                                                            Value="Transparent" />
                                                    <Setter Property="BorderBrush"
                                                            TargetName="splitBorder"
                                                            Value="Transparent" />
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      IsHitTestVisible="False"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasDropShadow"
                             SourceName="PART_Popup"
                             Value="True">
                        <Setter Property="Margin"
                                TargetName="shadow"
                                Value="0,0,5,5" />
                        <Setter Property="Color"
                                TargetName="shadow"
                                Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems"
                             Value="False">
                        <Setter Property="Height"
                                TargetName="DropDownBorder"
                                Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                       Value="True" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                       Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="False" />
                    </MultiTrigger>
                    <Trigger Property="CanContentScroll"
                             SourceName="DropDownScrollViewer"
                             Value="False">
                        <Setter Property="Canvas.Top"
                                TargetName="OpaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter Property="Canvas.Left"
                                TargetName="OpaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ButtonBaseCalibration"
                             TargetType="{x:Type ButtonBase}">
                <Border x:Name="border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="Lavender"
                        SnapsToDevicePixels="True"
                        CornerRadius="5"
                        Width="80"
                        Height="24">
                    <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted"
                             Value="True">
                        <Setter Property="BorderBrush"
                                TargetName="border"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                TargetName="border"
                                Value="#FFBEE6FD" />
                        <Setter Property="BorderBrush"
                                TargetName="border"
                                Value="#FF3C7FB1" />
                    </Trigger>
                    <Trigger Property="IsPressed"
                             Value="True">
                        <Setter Property="Background"
                                TargetName="border"
                                Value="#FFC4E5F6" />
                        <Setter Property="BorderBrush"
                                TargetName="border"
                                Value="#FF2C628B" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked"
                             Value="True">
                        <Setter Property="Background"
                                TargetName="border"
                                Value="#FFBCDDEE" />
                        <Setter Property="BorderBrush"
                                TargetName="border"
                                Value="#FF245A83" />
                    </Trigger>
                    <Trigger Property="IsEnabled"
                             Value="False">
                        <Setter Property="Background"
                                TargetName="border"
                                Value="#FFF4F4F4" />
                        <Setter Property="BorderBrush"
                                TargetName="border"
                                Value="#FFADB2B5" />
                        <Setter Property="Foreground"
                                Value="#FF838383" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <SolidColorBrush x:Key="Button.Static.Background"
                             Color="Lavender" />
            <SolidColorBrush x:Key="Button.Static.Border"
                             Color="#FF707070" />
            <SolidColorBrush x:Key="Button.MouseOver.Background"
                             Color="#FFBEE6FD" />
            <SolidColorBrush x:Key="Button.MouseOver.Border"
                             Color="#FF3C7FB1" />
            <SolidColorBrush x:Key="Button.Pressed.Background"
                             Color="#FFC4E5F6" />
            <SolidColorBrush x:Key="Button.Pressed.Border"
                             Color="#FF2C628B" />
            <SolidColorBrush x:Key="Button.Disabled.Background"
                             Color="#FFF4F4F4" />
            <SolidColorBrush x:Key="Button.Disabled.Border"
                             Color="#FFADB2B5" />
            <SolidColorBrush x:Key="Button.Disabled.Foreground"
                             Color="#FF838383" />
            <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Background"
                        Value="Lavender" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource Button.Static.Border}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true"
                                    CornerRadius="5"
                                    Width="80"
                                    Height="24"
                                    Margin="5">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsDefaulted"
                                         Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{StaticResource Button.MouseOver.Border}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.Pressed.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{StaticResource Button.Pressed.Border}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{StaticResource Button.Disabled.Border}" />
                                    <Setter Property="TextElement.Foreground"
                                            TargetName="contentPresenter"
                                            Value="{StaticResource Button.Disabled.Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Background"
                        Value="{StaticResource Button.Static.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource Button.Static.Border}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true"
                                    CornerRadius="5"
                                    Width="80"
                                    Height="24"
                                    Margin="5">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted"
                                         Value="true">
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{StaticResource Button.MouseOver.Border}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.Pressed.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{StaticResource Button.Pressed.Border}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Background"
                                            TargetName="border"
                                            Value="{StaticResource Button.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="border"
                                            Value="{StaticResource Button.Disabled.Border}" />
                                    <Setter Property="TextElement.Foreground"
                                            TargetName="contentPresenter"
                                            Value="{StaticResource Button.Disabled.Foreground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <!--自定义命令绑定-->
    <!--
    <UserControl.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="Enter" Command="{StaticResource sendTextKey}"/>
    </UserControl.InputBindings>
    -->
    <!--设置命令-->
    <!--
    <UserControl.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open" Executed="FileOpen"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="FileSave"/>
        <CommandBinding Command="ApplicationCommands.Close" Executed="WindowClosed"/>
        <CommandBinding Command="{StaticResource sendTextKey}" Executed="SendButton_Click"/>
    </UserControl.CommandBindings>-->
    <!--定义窗格网络-->
    <Grid>
        <Grid.RowDefinitions>
            <!--半固定面板-->
            <RowDefinition Height="34" />
            <RowDefinition />
            <RowDefinition Height="auto" />
            <RowDefinition Height="34" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="300" />
        </Grid.ColumnDefinitions>
        <!--串口配置面板-->
        <DockPanel Grid.ColumnSpan="2">
            <ToggleButton x:Name="TurnOnButton"
                          DockPanel.Dock="Right"
                          Content="打开串口"
                          Checked="TurnOnButton_Checked"
                          Unchecked="TurnOnButton_Unchecked" />
            <TextBlock Text="串口状态"
                       DockPanel.Dock="Right" />
            <Ellipse x:Name="SerialPortStatusEllipse"
                     DockPanel.Dock="Right" />
            <TextBlock Text="端口" />
            <ComboBox x:Name="PortNameComboBox" />
            <TextBlock Text="波特率" />
            <ComboBox x:Name="BaudRateComboBox"
                      SelectedIndex="6">
                <!--自定义串口波特率-->
                <ComboBoxItem Content="300" />
                <ComboBoxItem Content="600" />
                <ComboBoxItem Content="1200" />
                <ComboBoxItem Content="2400" />
                <ComboBoxItem Content="4800" />
                <ComboBoxItem Content="9600" />
                <ComboBoxItem Content="19200" />
                <ComboBoxItem Content="38400" />
                <ComboBoxItem Content="43000" />
                <ComboBoxItem Content="56000" />
                <ComboBoxItem Content="57600" />
                <ComboBoxItem Content="115200" />
                <ComboBoxItem Content="128000" />
                <ComboBoxItem Content="230400" />
                <ComboBoxItem Content="256000" />
                <ComboBoxItem Content="460800" />
                <ComboBoxItem Content="921600" />
            </ComboBox>
            <TextBlock Text="校验位" />
            <ComboBox x:Name="ParityComboBox">
                <ComboBoxItem Content="None" />
                <ComboBoxItem Content="Odd" />
                <ComboBoxItem Content="Even" />
                <ComboBoxItem Content="Mark" />
                <ComboBoxItem Content="Space" />
            </ComboBox>
            <TextBlock Text="数据位" />
            <ComboBox x:Name="DataBitsComboBox"
                      SelectedIndex="3">
                <ComboBoxItem Content="5" />
                <ComboBoxItem Content="6" />
                <ComboBoxItem Content="7" />
                <ComboBoxItem Content="8" />
            </ComboBox>
            <TextBlock Text="停止位" />
            <ComboBox x:Name="StopBitsComboBox"
                      SelectedIndex="0">
                <ComboBoxItem Content="1" />
                <ComboBoxItem Content="1.5" />
                <ComboBoxItem Content="3" />
            </ComboBox>
            <Border />
        </DockPanel>
        <Grid Grid.Column="1"
              Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <!--设备参数标定面板-->
            <GroupBox Header="仪表连接面板">
                <DockPanel>
                    <DockPanel DockPanel.Dock="Top">
                        <Ellipse x:Name="ConnectionStatusEllipse"
                                 DockPanel.Dock="Left" 
                                 Margin="5"/>
                        <TextBlock Text="仪表连接状态"
                                   DockPanel.Dock="Left" />
                        <ToggleButton x:Name="EstablishConnectionButton"
                                      DockPanel.Dock="Right"
                                      Content="连接仪表"
                                      Checked="EstablishConnectionButton_Checked"
                                      Unchecked="EstablishConnectionButton_Unchecked" />
                        <Grid />
                    </DockPanel>
                    <DockPanel DockPanel.Dock="Top">
                        <Ellipse x:Name="SqlConnectEllipse"
                                 DockPanel.Dock="Left"
                                 Margin="5" />
                        <TextBlock Text="数据库连接状态"
                                   DockPanel.Dock="Left" />
                        <ToggleButton x:Name="SqlConnectButton"
                                      DockPanel.Dock="Right"
                                      Content="连接数据库"
                                      Checked="SqlConnectButton_Checked"
                                      Unchecked="SqlConnectButton_Unchecked" />
                        <Grid />
                    </DockPanel>
                    <CheckBox Margin="5"
                              Grid.Column="1"
                              x:Name="AutoSaveToSqlCheckBox"
                              Content="自动写入数据库"
                              VerticalAlignment="Center" />
                    <Button Command="Save"
                            Content="保存文件"
                            VerticalAlignment="Stretch"
                            Visibility="Hidden" />
                </DockPanel>
            </GroupBox>
            <!--串口接收面板-->
            <GroupBox Header="接收面板"
                      Margin="5"
                      BorderBrush="Gray"
                      Grid.Row="1"
                      BorderThickness="1"
                      Visibility="Hidden">
                <Grid VerticalAlignment="Center"
                      Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--<CheckBox x:Name="hexadecimalDisplayCheckBox" Unchecked="HexadecimalDisplayCheckBox_Unchecked" Checked="HexadecimalDisplayCheckBox_Checked" Grid.Row="2" Grid.Column="0" Margin="5" Content="十六进制显示" VerticalContentAlignment="Center"/>-->
                    <!--<ToggleButton x:Name="stopShowingButton" Grid.Row="0" Grid.Column="1" Margin="5" Content="停止显示" Checked="StopShowingButton_Checked" Unchecked="StopShowingButton_Unchecked"/>-->
                </Grid>
            </GroupBox>
            <!--串口发送面板-->
            <GroupBox BorderBrush="Gray"
                      BorderThickness="1"
                      Grid.Row="2"
                      Header="发送面板"
                      Visibility="Hidden">
                <Grid VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0"
                               Grid.Row="0"
                               Margin="5"
                               VerticalAlignment="Center"
                               Grid.ColumnSpan="2">
                        <TextBlock VerticalAlignment="Center"
                                   Text="自动发送周期" />
                        <TextBox x:Name="AutoSendCycleTextBox"
                                 Margin="0"
                                 Text="1000"
                                 MinWidth="66"
                                 VerticalAlignment="Center" />
                        <TextBlock Text="毫秒"
                                   Margin="0"
                                   VerticalAlignment="Center" />
                    </DockPanel>
                    <Border Grid.Column="0"
                            Grid.Row="1"
                            Margin="5"
                            VerticalAlignment="Center">
                        <StackPanel>
                            <CheckBox x:Name="AutoSendCheckBox"
                                      Margin="5"
                                      VerticalAlignment="Center"
                                      Content="自动发送"
                                      Checked="AutoSendCheckBox_Checked"
                                      Unchecked="AutoSendCheckBox_Unchecked" />
                            <Button x:Name="ClearSendButton"
                                    Margin="5"
                                    Content="清空重填"
                                    Click="ClearSendButton_Click" />
                            <Button Command="Open"
                                    Margin="5"
                                    Content="加载文件"
                                    Click="ClearReceiveButton_Click" />
                        </StackPanel>
                    </Border>
                    <Button x:Name="SendButton"
                            Grid.Row="1"
                            Grid.Column="2"
                            Margin="5"
                            Content="手动发送"
                            Click="SendButton_Click">
                        <Button.ToolTip>
                            <ToolTip Placement="Right"
                                     Content="Ctrl+Enter" />
                        </Button.ToolTip>
                    </Button>
                    <DockPanel Grid.Column="0"
                               Grid.Row="2"
                               Margin="0"
                               Grid.ColumnSpan="2">
                        <TextBlock Text="文件路径"
                                   Margin="5"
                                   VerticalAlignment="Center" />
                        <TextBox x:Name="FileNameTextBox"
                                 IsReadOnly="True"
                                 Margin="0"
                                 Text="选择文件"
                                 HorizontalContentAlignment="Center"
                                 Width="150"
                                 VerticalAlignment="Center" />
                    </DockPanel>
                </Grid>
            </GroupBox>
            <!--标定信息设置面板-->
            <!--设备描述标定信息-->
            <TabControl Grid.Row="1"
                        Margin="6">
                <!--设备参数标定信息-->
                <TabItem Header="参数标定">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <TextBlock HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Text="标定参数" />
                            <ComboBox x:Name="CalibrationParametersComboBox"
                                      SelectedIndex="0">
                                <ComboBoxItem Content="0x50，下限标定" />
                                <ComboBoxItem Content="0x51，上限标定（加压）" />
                                <ComboBoxItem Content="0x52，置零点（SetZero）" />
                                <ComboBoxItem Content="0x53，设量程下限" />
                                <ComboBoxItem Content="0x54，设量程上限" />
                                <ComboBoxItem Content="0x55，显示单位" />
                            </ComboBox>
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <TextBlock Text="单位" />
                            <ComboBox x:Name="CalibrationUnitComboBox"
                                      SelectedIndex="0">
                                <ComboBoxItem Content="Pa(帕)" />
                                <ComboBoxItem Content="kPa（千帕）" />
                                <ComboBoxItem Content="MPa（兆帕）" />
                                <ComboBoxItem Content="kg/cm²（千克/厘米²）" />
                                <ComboBoxItem Content="g/cm²（克/厘米²）" />
                                <ComboBoxItem Content="Torr（托）" />
                                <ComboBoxItem Content="atm（标准大气压）" />
                                <ComboBoxItem Content="i4H₂0（英寸水柱4℃）" />
                                <ComboBoxItem Content="m4H₂0（毫米水柱4℃）" />
                                <ComboBoxItem Content="bar（巴）" />
                                <ComboBoxItem Content="mbar（毫巴）" />
                                <ComboBoxItem Content="inH₂0（英寸水柱20℃）" />
                                <ComboBoxItem Content="inHg（英寸汞柱）" />
                                <ComboBoxItem Content="ftH₂0（英尺水柱20℃" />
                                <ComboBoxItem Content="mmH₂0（毫米水柱20℃）" />
                                <ComboBoxItem Content="mmHg（毫米汞柱）" />
                                <ComboBoxItem Content="psi（磅/英寸²）" />
                                <ComboBoxItem Content="mH₂0（米水柱20℃）" />
                            </ComboBox>
                            <TextBox x:Name="CalibrationUnitTextBox"
                                     Text="04"
                                     VerticalAlignment="Center" />
                        </DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <TextBlock Text="标定数据" />
                            <TextBox x:Name="CalibrationParametersContentTextBox"
                                     Text="00"
                                     VerticalAlignment="Center" />
                        </DockPanel>
                        <DockPanel  Margin="2.5,0,2.5,2.5"
                                    Background="SeaShell"
                                    DockPanel.Dock="Bottom">
                            <Button x:Name="ParameterCalibrationButton"
                                    DockPanel.Dock="Right"
                                    Content="参数标定"
                                    Click="ParameterCalibrationButton_Click" />
                            <Grid DockPanel.Dock="Right" />
                        </DockPanel>
                        <Border DockPanel.Dock="Bottom"
                                BorderBrush="Gray"
                                BorderThickness="0.25"
                                Margin="2.5,0" />
                        <Grid />
                    </DockPanel>
                </TabItem>
                <TabItem Header="描述标定">
                    <DockPanel>
                        <DockPanel  Margin="2.5,0,2.5,2.5"
                                    Background="SeaShell"
                                    DockPanel.Dock="Bottom">
                            <Button x:Name="DescriptionCalibrationButton"
                                    DockPanel.Dock="Right"
                                    Content="描述标定"
                                    Click="DescriptionCalibrationButton_Click" />
                            <Grid DockPanel.Dock="Right" />
                        </DockPanel>
                        <Border DockPanel.Dock="Bottom"
                                BorderBrush="Gray"
                                BorderThickness="0.25"
                                Margin="2.5,0" />
                        <ScrollViewer DockPanel.Dock="Top">
                            <ScrollViewer.ToolTip>
                                <ToolTip Placement="Top"
                                         Content="需要标定的内容" />
                            </ScrollViewer.ToolTip>
                            <DockPanel>
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="仪表型号（8byte）" />
                                    <TextBox x:Name="CalibrationInstrumentModelTextBox"
                                             Margin="0"
                                             Text="00 01 02 03 04 05 06 07"
                                             VerticalAlignment="Center"
                                             PreviewTextInput="CalibrationInstrumentModelTextBox_PreviewTextInput" />
                                </DockPanel>
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="系列号（16byte）" />
                                    <TextBox x:Name="CalibrationSerialNumberTextBox"
                                             PreviewTextInput="CalibrationSerialNumberTextBox_PreviewTextInput"
                                             Margin="0"
                                             Text="00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F"
                                             VerticalAlignment="Center" />
                                </DockPanel>
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="IP等级（8byte）" />
                                    <TextBox x:Name="CalibrationIpRatingTextBox"
                                             PreviewTextInput="CalibrationIPRatingTextBox_PreviewTextInput"
                                             Margin="0"
                                             Text="00 01 02 03 04 05 06 07"
                                             VerticalAlignment="Center" />
                                </DockPanel>
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="防爆等级（12byte）" />
                                    <TextBox x:Name="CalibrationExplosionProofLevelTextBox"
                                             PreviewTextInput="CalibrationExplosionProofLevelTextBox_PreviewTextInput"
                                             Margin="0"
                                             Text="00 01 02 03 04 05 06 07 08 09 0A 0B"
                                             VerticalAlignment="Center" />
                                </DockPanel>
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Text="说明（10byte）" />
                                    <TextBox x:Name="CalibrationInstructionsTextBox"
                                             PreviewTextInput="CalibrationInstructionsTextBox_PreviewTextInput"
                                             Margin="0"
                                             Text="00 01 02 03 04 05 06 07 08 09"
                                             VerticalAlignment="Center" />
                                </DockPanel>
                                <Grid />
                            </DockPanel>
                        </ScrollViewer>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="125" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="125" />
            </Grid.RowDefinitions>
            <!--显示面板-->
            <GroupBox Grid.Row="0"
                      Header="接收文本面板">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <ScrollViewer x:Name="DisplayScrollViewer">
                        <ScrollViewer.ToolTip>
                            <ToolTip Placement="Top"
                                     Content="显示串口接收到的数据" />
                        </ScrollViewer.ToolTip>
                        <TextBox x:Name="DisplayTextBox"
                                 Margin="5,0"
                                 IsReadOnly="True"
                                 TextWrapping="Wrap"
                                 TextAlignment="Left"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 BorderBrush="{x:Null}"
                                 BorderThickness="0" />
                    </ScrollViewer>
                    <Border Grid.Row="1"
                            BorderBrush="Gray"
                            BorderThickness="0.25" />
                    <DockPanel Grid.Row="2"
                               Background="SeaShell">
                        <Button x:Name="ClearReceiveButton"
                                DockPanel.Dock="Right"
                                Content="清空接收区"
                                Click="ClearReceiveButton_Click" />
                        <CheckBox x:Name="AutoClearCheckBox"
                                  Grid.Column="1"
                                  Grid.Row="1"
                                  Content="自动清空"
                                  DockPanel.Dock="Right"
                                  IsChecked="True" />
                        <TextBlock DockPanel.Dock="Left"
                                   Text="数据更新率" />
                        <TextBox x:Name="RegularDataUpdateRate"
                                 DockPanel.Dock="Left"
                                 PreviewTextInput="RegularDataUpdateRate_PreviewTextInput" />
                        <TextBlock DockPanel.Dock="Left"
                                   Text="秒" />
                    </DockPanel>
                </Grid>
            </GroupBox>
            <!--仪表参数解析面板-->
            <GroupBox Grid.Row="1"
                      Header="仪表参数解析面板">
                <WrapPanel x:Name="InstrumentParameterAnalysisWrapPanel">
                    <DockPanel x:Name="ResProtocolDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="通信协议" />
                        <TextBox x:Name="ResProtocol"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResAddressDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="网络地址" />
                        <TextBox x:Name="ResAddress"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResVendorDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="厂商号" />
                        <TextBox x:Name="ResVendor"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResTypeDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="仪表类型" />
                        <TextBox x:Name="ResType"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResGroupDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="仪表组号" />
                        <TextBox x:Name="ResGroup"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResFunctionDataDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="数据类型" />
                        <TextBox x:Name="ResFunctionData"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <!--仪表实时数据解析-->
                    <DockPanel x:Name="ResSucRateDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="通信效率" />
                        <TextBox x:Name="ResSucRate"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResBatVolDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="电池电压" />
                        <TextBox x:Name="ResBatVol"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResSleepTimeDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="休眠时间" />
                        <TextBox x:Name="ResSleepTime"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResStatueDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="仪表状态" />
                        <TextBox x:Name="ResStatue"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResTimeDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="运行时间" />
                        <TextBox x:Name="ResTime"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResDataDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="实时数据" />
                        <TextBox x:Name="ResData"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <!--仪表基本参数解析-->
                    <DockPanel x:Name="ResModelDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="仪表型号" />
                        <TextBox x:Name="ResModel"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResSerialNumberDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="系列号" />
                        <TextBox x:Name="ResSerialNumber"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResFirmwareVersionDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="固件版本" />
                        <TextBox x:Name="ResFirmwareVersion"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResSoftwareVersionDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="软件版本" />
                        <TextBox x:Name="ResSoftwareVersion"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResLowRangeDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="量程下限" />
                        <TextBox x:Name="ResLowRange"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResHighRangeDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="量程上限" />
                        <TextBox x:Name="ResHighRange"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResMeasurementAccuracyDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="测量精度" />
                        <TextBox x:Name="ResMeasurementAccuracy"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResProtectionLevelDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="防护等级" />
                        <TextBox x:Name="ResProtectionLevel"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResExplosionProofGradeDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="防爆等级" />
                        <TextBox x:Name="ResExplosionProofGrade"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <DockPanel x:Name="ResIllustrateDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="说明" />
                        <TextBox x:Name="ResIllustrate"
                                 IsReadOnly="True" />
                    </DockPanel>
                    <!--校验码解析-->
                    <DockPanel x:Name="ResCyclicRedundancyCheckDockPanel"
                               Visibility="Collapsed">
                        <TextBlock Text="校验码" />
                        <TextBox x:Name="ResCyclicRedundancyCheck"
                                 IsReadOnly="True" />
                    </DockPanel>
                </WrapPanel>
            </GroupBox>
            <!--实时数据显示面板-->
            <GroupBox Grid.Row="2"
                      Header="实时数据显示面板">
                <Grid Grid.Row="2">
                    <d3:ChartPlotter x:Name="Plotter"
                                     FontSize="8"
                                     Margin="0,5,5,0" />
                </Grid>
            </GroupBox>
            <!--发送文本面板-->
            <GroupBox Grid.Row="3"
                      Grid.ColumnSpan="2"
                      Header="发送文本面板">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <ScrollViewer>
                        <ScrollViewer.ToolTip>
                            <ToolTip Placement="Top"
                                     Content="将要发送的数据，Ctrl+Enter发送" />
                        </ScrollViewer.ToolTip>
                        <TextBox x:Name="SendTextBox"
                                 Margin="5,0"
                                 AcceptsReturn="True"
                                 TextWrapping="Wrap"
                                 TextAlignment="Left"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 BorderBrush="{x:Null}"
                                 BorderThickness="0"
                                 PreviewTextInput="SendTextBox_PreviewTextInput" />
                    </ScrollViewer>
                    <Border Grid.Row="1"
                            BorderBrush="Gray"
                            BorderThickness="0.25" />
                    <DockPanel Grid.Row="2"
                               Background="SeaShell">
                        <Button x:Name="ManuallyClearSendButton"
                                Content="清空发送区"
                                Click="ClearSendButton_Click"
                                DockPanel.Dock="Right" />
                        <Button x:Name="ManuallySendButton"
                                Content="手动发送"
                                DockPanel.Dock="Right"
                                Click="SendButton_Click" />
                        <Grid />
                    </DockPanel>
                </Grid>
            </GroupBox>
        </Grid>
        <!--状态栏-->
        <Border Grid.Row="2"
                Grid.ColumnSpan="2"
                BorderBrush="Gray"
                BorderThickness="0.25"
                Grid.RowSpan="2" />
        <StatusBar Grid.Row="3"
                   Grid.ColumnSpan="2">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="200*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <!--提示栏-->
                <TextBlock x:Name="StatusTextBlock"
                           Foreground="Red" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1"
                           HorizontalAlignment="Right">
                <!--接收字节数-->
                <TextBlock Text="接收字节数" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="StatusReceiveByteTextBlock"
                           Foreground="Blue"
                           Text="0" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="3"
                           HorizontalAlignment="Right">
                <!--发送字节数-->
                <TextBlock Text="发送字节数" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock x:Name="StatusSendByteTextBlock"
                           Foreground="Blue"
                           Text="0" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="5">
                <!--计数清零-->
                <Button x:Name="CountClearButton"
                        Margin="0"
                        Click="CountClearButton_Click"
                        Content="计数清零" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="6"
                           HorizontalAlignment="Right">
                <!--当前时间-->
                <TextBlock x:Name="OperationTime"
                           Foreground="Blue"
                           Text="0" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>